{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","className","map","tab","index","id","title","classNames","some","searchTab","href","onClick","find","content","App","useState","selected","ReactDOM","render","document","getElementById"],"mappings":"8LAUaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAACC,EAAUC,GACnB,IAAQC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAEZ,OACE,oBAEEL,UAAWM,IACTR,IAAkBM,IAEfP,EAAKU,MAAK,SAACC,GAAD,OAAeA,EAAUJ,KAAON,MAC9B,IAAVK,EAED,YAAc,IAEpB,UAAQ,MAVV,SAYE,mBACEM,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,WACHZ,IAAkBM,GACpBL,EAAcG,IALpB,SASGG,KApBED,UA4Bf,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,mBAEIH,EAAKc,MAAK,SAACH,GAAD,OAAeA,EAAUJ,KAAON,YAF9C,aAEI,EAA0Dc,cC9CvDf,G,kBAAc,CACzB,CAAEO,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,eACxC,CAAER,GAAI,QAASC,MAAO,QAASO,QAAS,iBAG7BC,EAAgB,WAC3B,MAAkCC,mBAASjB,EAAK,IAAhD,mBAAOkB,EAAP,KAAiBhB,EAAjB,KAEA,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBe,EAASV,SAG/B,cAAC,EAAD,CACER,KAAMA,EACNC,cAAeiB,EAASX,GACxBL,cAAeA,QCvBvBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f7bbfbdd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab: Tab, index: number) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={classNames(\n                  selectedTabId === id\n                  || (\n                    !tabs.some((searchTab) => searchTab.id === selectedTabId)\n                    && index === 0\n                  )\n                    ? 'is-active' : '',\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (selectedTabId !== id) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          tabs.find((searchTab) => searchTab.id === selectedTabId)?.content\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selected, onTabSelected] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selected.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selected.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//\n"],"sourceRoot":""}